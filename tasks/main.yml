---
- name: If desired_user is set, then reset ansible_user to desired_user
  delegate_to: localhost
  set_fact:
    ansible_user: "{{ desired_user }}"
  when:
    - desired_user is defined

- name: Check if connection is possible with user ansible_user and public key
  command: ssh -o User={{ ansible_user }} -o ConnectTimeout={{ check_login_timeout }} -o PreferredAuthentications=publickey -o PubkeyAuthentication=yes {{ ansible_host | default(inventory_hostname) }} echo "Worked"
  register: check_login_connection_default
  delegate_to: localhost
  ignore_errors: true
  changed_when: false

- name: Check if connection is possible with user initial_user and public key
  command: ssh -o User={{ initial_user }} -o ConnectTimeout={{ check_login_timeout }} -o PreferredAuthentications=publickey -o PubkeyAuthentication=yes {{ ansible_host | default(inventory_hostname) }} echo "Worked"
  register: check_login_connection_initial_user
  delegate_to: localhost
  ignore_errors: true
  changed_when: false
  when:
    - check_login_connection_default is failed
    - initial_user is defined

- name: Check if connection is possible with user ansible_user and password initial_password
  command: sshpass -p {{ initial_password }} ssh -o User={{ ansible_user }} -o ConnectTimeout={{ check_login_timeout }} -o PreferredAuthentications=password -o PubkeyAuthentication=no {{ ansible_host | default(inventory_hostname) }} echo "Worked"
  register: check_login_connection_initial_password
  delegate_to: localhost
  ignore_errors: true
  changed_when: false
  when:
    - check_login_connection_default is failed
    - check_login_connection_initial_user is defined
    - check_login_connection_initial_user is failed
    - initial_password is defined

- name: Check if connection is possible with user initial_user and password initial_password
  command: sshpass -p {{ initial_password }} ssh -o User={{ initial_user }} -o ConnectTimeout={{ check_login_timeout }} -o PreferredAuthentications=password -o PubkeyAuthentication=no {{ ansible_host | default(inventory_hostname) }} echo "Worked"
  register: check_login_connection_initial_user_and_password
  delegate_to: localhost
  ignore_errors: true
  changed_when: false
  when:
    - check_login_connection_default is failed
    - check_login_connection_initial_user is defined
    - check_login_connection_initial_user is failed
    - check_login_connection_initial_password is defined
    - check_login_connection_initial_password is failed
    - initial_user is defined
    - initial_password is defined

- name: If connection required change of user, set desired_user
  delegate_to: localhost
  set_fact:
    desired_user: "{{ ansible_user }}"
  when:
    - check_login_connection_initial_user is defined
    - check_login_connection_initial_user is succeeded
    - initial_user is defined

- name: If connection required change of user and password, set desired_user
  delegate_to: localhost
  set_fact:
    desired_user: "{{ ansible_user }}"
  when:
    - check_login_connection_initial_user_and_password is defined
    - check_login_connection_initial_user_and_password is succeeded
    - initial_user is defined

- name: If connection required change of user, change ansible_user to initial_user
  delegate_to: localhost
  set_fact:
    ansible_user: "{{ initial_user }}"
  when:
    - check_login_connection_initial_user is defined
    - check_login_connection_initial_user is succeeded
    - initial_user is defined

- name: If connection required change of password, change password
  delegate_to: localhost
  set_fact:
    ansible_ssh_pass: "{{ initial_password }}"
    ansible_sudo_pass: "{{ initial_password }}"
  when:
    - check_login_connection_initial_password is defined
    - check_login_connection_initial_password is succeeded
    - initial_password is defined

- name: If connection required change of user and password, change ansible_user to initial_user, change password
  delegate_to: localhost
  set_fact:
    ansible_user: "{{ initial_user }}"
    ansible_ssh_pass: "{{ initial_password }}"
    ansible_sudo_pass: "{{ initial_password }}"
  when:
    - check_login_connection_initial_user_and_password is defined
    - check_login_connection_initial_user_and_password is succeeded
    - initial_user is defined
    - initial_password is defined
